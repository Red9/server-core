var _ = require('underscore');
var cassandra = require('./cassandra');
var common = require('./resource.common');


function createAddQuery(tableName, id, operation, cassandraKey, cassandraType, values) {
    var operator = '';
    if (operation === 'add') {
        operator = '+';
    } else if (operation === 'remove') {
        operator = '-';
    }


    var query = 'UPDATE ' + tableName + ' SET '
        + cassandraKey + ' = ' + cassandraKey + ' ' + operator + ' {';
    for (var i = 0; i < values.length; i++) {
        if (i !== 0) {
            query += ',';
        }
        query += "'" + values[i] + "'";
    }
    query += '} WHERE id=' + id;

    values.push(id);

    return {
        query: query,
        parameterss: [],
        hints: []
    };
}

function genericOperation(resourceDescription, id, operation, jsKey, values, callback) {
    console.log('jsKey: ' + jsKey);
    console.dir(values);
    var map = common.getMap(resourceDescription.mapping, jsKey)
    var cassandraOptions = createAddQuery(resourceDescription.tableName, id, operation, map.cassandraKey, map.cassandraType, values);

    cassandra.execute({
        query: cassandraOptions.query,
        parameters: cassandraOptions.parameters,
        hints: cassandraOptions.hints,
        callback: callback
    });
}


exports.add = function (resourceDescription, id, jsKey, values, callback) {
    genericOperation(resourceDescription, id, 'add', jsKey, values, callback);
}

exports.remove = function (resourceDescription, id, jsKey, values, callback) {
    genericOperation(resourceDescription, id, 'remove', jsKey, values, callback);
}
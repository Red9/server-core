var _ = require('underscore')._;
var cassandra;
var cassandraDriver = require('cassandra-driver');

exports.init = function (config, callback) {
    cassandra = new cassandraDriver.Client({
        contactPoints: config.cassandraHosts,
        keyspace: config.cassandraKeyspace
    });

    cassandra.connect(function (err, result) {
        if (_.isFunction(callback)) {
            callback(err);
        } else if (err) {
            console.log('Error: ' + err);
        }
    });
};

/**
 * There's no configuration check here since that's a programmer error, and should be caught very quickly.
 *
 * There's no configuration check here since that's a programmer error, and should be caught very quickly.
 *
 * rowCallback (mappedResource, currentRow)
 * callback (err, rowCount)
 * @param options
 */
exports.execute = function (options) {
    var query = options.query;
    var rowCallback = options.rowCallback;
    var callback = options.callback;

    var parameters = options.parameters;
    if (!_.isArray(parameters)) {
        parameters = [];
    }

    //console.log('Query: ' + query);
    //console.dir(parameters);
    //console.dir(options.hints);
    var queryOptions = {
        //autoPage: true,
        fetchSize: 8000
    };

    if (_.isArray(options.hints)) {
        queryOptions.hints = options.hints;
    }

    cassandra.eachRow(query, parameters,
        queryOptions,
        function (n, row) {
            if (_.isFunction(rowCallback)) {
                rowCallback(row, n);
            }
        },
        callback);
};
